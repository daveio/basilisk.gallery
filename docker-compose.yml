---
networks:
  external_network:
    external: true
  internal_network:
    internal: true
services:
  es:
    container_name: elasticsearch
    environment:
      - ES_JAVA_OPTS=-Xms512m -Xmx512m -Des.enforce.bootstrap.checks=true
      - xpack.license.self_generated.type=basic
      - xpack.security.enabled=false
      - xpack.watcher.enabled=false
      - xpack.graph.enabled=false
      - xpack.ml.enabled=false
      - bootstrap.memory_lock=true
      - cluster.name=es
      - discovery.type=single-node
      - thread_pool.write.queue_size=1000
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'curl --silent --fail localhost:9200/_cluster/health || exit 1',
        ]
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.4
    networks:
      - external_network
      - internal_network
    ports:
      - 127.0.0.1:9200:9200
    restart: always
    ulimits:
      memlock:
        hard: -1
        soft: -1
      nofile:
        hard: 65536
        soft: 65536
    volumes:
      - elasticsearchStorage:/usr/share/elasticsearch/data:rw
  privoxy:
    container_name: privoxy
    depends_on:
      - tor
    image: sirboops/privoxy
    networks:
      - external_network
      - internal_network
    volumes:
      - privoxyStorage:/opt/config:rw
  sidekiq:
    build: .
    # env_file: .env.production
    command: bundle exec sidekiq
    container_name: basilisk-glitch-sidekiq
    depends_on:
      - es
      - privoxy
    healthcheck:
      test: ['CMD-SHELL', "ps aux | grep 'idekiq 6' || false"]
    image: tootsuite/mastodon
    networks:
      - external_network
      - internal_network
    pull_policy: build
    restart: always
    volumes:
      - mastodonStorage:/mastodon/public/system:rw
  streaming:
    build: .
    # env_file: .env.production
    command: node ./streaming
    container_name: basilisk-glitch-streaming
    depends_on:
      - es
      - privoxy
      - sidekiq
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'wget -q --spider --proxy=off localhost:4000/api/v1/streaming/health || exit 1',
        ]
    image: tootsuite/mastodon
    networks:
      - external_network
      - internal_network
    ports:
      - 127.0.0.1:4000:4000
    pull_policy: build
    restart: always
  tor:
    container_name: tor
    image: sirboops/tor
    networks:
      - external_network
      - internal_network
  web:
    build: .
    # env_file: .env.production
    command: bash -c "rm -f /mastodon/tmp/pids/server.pid; bundle exec rails s -p 3000"
    container_name: basilisk-glitch-web
    depends_on:
      - es
      - privoxy
      - sidekiq
      - streaming
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'wget -q --spider --proxy=off localhost:3000/health || exit 1',
        ]
    image: tootsuite/mastodon
    networks:
      - external_network
      - internal_network
    ports:
      - 127.0.0.1:3000:3000
    pull_policy: build
    restart: always
    volumes:
      - mastodonStorage:/mastodon/public/system:rw
version: '3'
volumes:
  elasticSearchStorage:
    external: true
  mastodonStorage:
    external: true
  privoxyStorage:
    external: true
