version: '3'
services:
  es:
    container_name: elasticsearch
    restart: always
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.4
    environment:
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m -Des.enforce.bootstrap.checks=true'
      - 'xpack.license.self_generated.type=basic'
      - 'xpack.security.enabled=false'
      - 'xpack.watcher.enabled=false'
      - 'xpack.graph.enabled=false'
      - 'xpack.ml.enabled=false'
      - 'bootstrap.memory_lock=true'
      - 'cluster.name=es'
      - 'discovery.type=single-node'
      - 'thread_pool.write.queue_size=1000'
    networks:
      - external_network
      - internal_network
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'curl --silent --fail localhost:9200/_cluster/health || exit 1',
        ]
    volumes:
      - elasticsearchStorage:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - '127.0.0.1:9200:9200'

  web:
    container_name: basilisk-glitch-web
    build: .
    image: tootsuite/mastodon
    pull_policy: build
    restart: always
    env_file: .env.production
    command: bash -c "rm -f /mastodon/tmp/pids/server.pid; bundle exec rails s -p 3000"
    networks:
      - external_network
      - internal_network
    healthcheck:
      # prettier-ignore
      test: ['CMD-SHELL', 'wget -q --spider --proxy=off localhost:3000/health || exit 1']
    ports:
      - '127.0.0.1:3000:3000'
    depends_on:
      - privoxy
      - es
      - streaming
      - sidekiq
    volumes:
      - mastodonStorage:/mastodon/public/system

  streaming:
    container_name: basilisk-glitch-streaming
    build: .
    image: tootsuite/mastodon
    pull_policy: build
    restart: always
    env_file: .env.production
    command: node ./streaming
    networks:
      - external_network
      - internal_network
    healthcheck:
      # prettier-ignore
      test: ['CMD-SHELL', 'wget -q --spider --proxy=off localhost:4000/api/v1/streaming/health || exit 1']
    ports:
      - '127.0.0.1:4000:4000'
    depends_on:
      - privoxy
      - es
      - sidekiq

  sidekiq:
    container_name: basilisk-glitch-sidekiq
    build: .
    image: tootsuite/mastodon
    pull_policy: build
    restart: always
    env_file: .env.production
    command: bundle exec sidekiq
    depends_on:
      - privoxy
      - es
    networks:
      - external_network
      - internal_network
    volumes:
      - mastodonStorage:/mastodon/public/system
    healthcheck:
      test: ['CMD-SHELL', "ps aux | grep '[s]idekiq\ 6' || false"]
  tor:
    container_name: tor
    image: sirboops/tor
    networks:
      - external_network
      - internal_network

  privoxy:
    container_name: privoxy
    image: sirboops/privoxy
    volumes:
      - privoxyStorage:/opt/config
    networks:
      - external_network
      - internal_network
    depends_on:
      - tor

networks:
  external_network:
  internal_network:
    internal: true
